{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nexport class FilterPipe {\n  transform(value, filterString, propName) {\n    const result = [];\n    if (!value || filterString === '' || propName === '') {\n      return value;\n    }\n    value.forEach(a => {\n      if (a[propName].trim().toLowerCase().includes(filterString.toLowerCase())) {\n        result.push(a);\n      }\n    });\n    return result;\n  }\n}\n_class = FilterPipe;\n_class.ɵfac = function FilterPipe_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"filter\",\n  type: _class,\n  pure: true\n});","map":{"version":3,"names":["FilterPipe","transform","value","filterString","propName","result","forEach","a","trim","toLowerCase","includes","push","pure"],"sources":["C:\\angular\\Shopping Cart\\E-Cart\\src\\app\\shared\\filter.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(value: any[], filterString: string, propName: string): any[] {\n    const result: any = [];\n    if (!value || filterString === '' || propName === ''){\n      return value;\n  }\n  value.forEach((a: any) => {\n  if (a[propName].trim().toLowerCase().includes(filterString.toLowerCase())) {\n    result.push(a);\n  }\n})\nreturn result;\n}\n}\n"],"mappings":";;AAKA,OAAM,MAAOA,UAAU;EAErBC,SAASA,CAACC,KAAY,EAAEC,YAAoB,EAAEC,QAAgB;IAC5D,MAAMC,MAAM,GAAQ,EAAE;IACtB,IAAI,CAACH,KAAK,IAAIC,YAAY,KAAK,EAAE,IAAIC,QAAQ,KAAK,EAAE,EAAC;MACnD,OAAOF,KAAK;;IAEhBA,KAAK,CAACI,OAAO,CAAEC,CAAM,IAAI;MACzB,IAAIA,CAAC,CAACH,QAAQ,CAAC,CAACI,IAAI,EAAE,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACP,YAAY,CAACM,WAAW,EAAE,CAAC,EAAE;QACzEJ,MAAM,CAACM,IAAI,CAACJ,CAAC,CAAC;;IAElB,CAAC,CAAC;IACF,OAAOF,MAAM;EACb;;SAbaL,UAAU;;mBAAVA,MAAU;AAAA;;;QAAVA,MAAU;EAAAY,IAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}